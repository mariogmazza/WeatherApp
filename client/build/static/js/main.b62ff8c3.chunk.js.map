{"version":3,"sources":["assets/drop.svg","assets/sun.svg","assets/snowflake.svg","assets/storm.svg","assets/tornado.svg","assets/clearsky_day.jpg","assets/snowy_day.jpg","assets/thounderstorm_day.jpg","assets/tornado_day.jpg","assets/rainning.jpg","assets/cloudy.svg","assets/forward.svg","redux/reducers/getWeatherReducer.js","redux/actions/weatherConstans.js","redux/reducers/imgChangerReducer.js","redux/reducers/rootReducer.js","redux/store/configureStore.js","redux/actions/errorActons.js","services/api.js","redux/actions/imgChangerAction.js","redux/actions/getWeatherAction.js","components/PlaceInput.jsx","containers/forecaster/ForecastApp.jsx","containers/weatherapp/WeatherApp.jsx","app/App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","initialState","weatherReducer","state","arguments","length","undefined","action","type","Object","objectSpread","data","imgChangerReducer","rootReducer","combineReducers","getWeather","getWeatherReducer","newImg","configureStore","createStore","compose","applyMiddleware","thunk","addError","error","api","call","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","method","path","response","wrap","_context","prev","next","console","log","axios","concat","sent","abrupt","stop","this","_x","_x2","_x3","apply","changeImg","imagePicker","condCode","arr","i","j","tornado","thounderstorm","snowyday","rainning","clearsky","actions","loadWeather","city","dispatch","_ref2","weatherObj","esm_extends","condition","code","t0","message","PlaceInput","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleChange","address","setState","isLoading","selectedCity","handleSelect","split","_this2","react_default","createElement","Fragment","dist_default","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","Input","assign","placeholder","className","loading","fluid","transparent","size","map","suggestion","active","style","backgroundColor","cursor","fontSize","textShadow","description","React","Component","connect","ForecastApp","backImg","iconImg","TEMP","condTEXT","imgCondition","includes","sun","snowy","thunder","drop","imgURL","temp","text","backgroundImage","backgroundRepeat","backgroundSize","components_PlaceInput","src","width","alt","WeatherApp","filter","forecaster_ForecastApp","withRouter","Switch","Route","exact","component","ReactDOM","render","react_redux_es","store","BrowserRouter","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.b62ff8c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drop.1006b328.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.f438ae6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake.e583d545.svg\";","module.exports = __webpack_public_path__ + \"static/media/storm.0245f59d.svg\";","module.exports = __webpack_public_path__ + \"static/media/tornado.b01c6ea7.svg\";","module.exports = __webpack_public_path__ + \"static/media/clearsky_day.ba95c669.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snowy_day.21913757.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thounderstorm_day.25ab6458.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tornado_day.26bb9bd8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rainning.58d0b3e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.a0969119.svg\";","module.exports = __webpack_public_path__ + \"static/media/forward.e21da0e8.svg\";","import { GET_WEATHER } from \"../actions/weatherConstans\";\r\n\r\nlet initialState={}\r\n\r\n\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_WEATHER:\r\n        return {\r\n            ...state, \r\n            data: action.data\r\n        }\r\n      \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default weatherReducer;","export const ADD_ERROR = 'ADD_ERROR';\r\nexport const REMOVE_ERROR = 'ERROR_REMOVE';\r\n\r\nexport const GET_WEATHER = 'GET_WEATHER';\r\nexport const CHANGE_IMG = 'CHANGE_IMG';\r\n","import { CHANGE_IMG } from \"../actions/weatherConstans\";\r\n\r\nlet initialState={}\r\n\r\n\r\n\r\nconst imgChangerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case CHANGE_IMG:\r\n        return {\r\n            ...state, \r\n            data: action.data\r\n        }\r\n      \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default imgChangerReducer;","import { combineReducers } from \"redux\";\r\nimport getWeatherReducer from \"./getWeatherReducer\";\r\nimport newImg from './imgChangerReducer'\r\n\r\n \r\nconst rootReducer = combineReducers({\r\n  getWeather:getWeatherReducer,\r\n  newImg\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport thunk from 'redux-thunk'\r\n// import { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n\r\nconst DEFAULT_STATE = {}; \r\n\r\n const configureStore = createStore( rootReducer, DEFAULT_STATE,\r\n  compose( applyMiddleware(thunk) ),\r\n);\r\n\r\nexport default configureStore","import { ADD_ERROR, REMOVE_ERROR } from './weatherConstans';\r\n\r\nexport const addError = error => {\r\n    return {\r\n        type: ADD_ERROR,\r\n        error\r\n    }\r\n};\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: REMOVE_ERROR\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\n// const host = 'http://localhost:5000/api';\r\n\r\n\r\nexport const call = async (method, path, data) => {\r\n  console.log(\"api\", data)\r\n  // const response = await axios[method](`${host}/${path}`, data);\r\n  const response = await axios[method](`/api/${path}`, data);\r\n\r\n\r\n  return response.data;\r\n};\r\n\r\nexport default {call};","import { CHANGE_IMG } from \"./weatherConstans\"; \r\n\r\n\r\nexport const changeImg =(newImg)=>({ \r\n  type: CHANGE_IMG,\r\n  data: newImg\r\n});","import { GET_WEATHER } from \"./weatherConstans\"; \r\nimport { addError, removeError } from \"./errorActons\";\r\nimport api from \"../../services/api\";\r\nimport { changeImg } from './imgChangerAction'\r\n\r\n\r\nimport clearsky from \"../../assets/clearsky_day.jpg\";\r\nimport snowyday from \"../../assets/snowy_day.jpg\";\r\nimport thounderstorm from \"../../assets/thounderstorm_day.jpg\";\r\nimport tornado from \"../../assets/tornado_day.jpg\";\r\nimport rainning from \"../../assets/rainning.jpg\";\r\n\r\n\r\n\r\nexport const changeWeather =(newWeather)=>({ \r\n  type: GET_WEATHER,\r\n  data: newWeather\r\n});\r\n\r\n\r\nconst imagePicker = condCode => {\r\n  const arr = [\r\n    [0, 1, 2], //TORNADO IMG\r\n    [3, 4, 37, 38, 39], // THOUNDER IMG\r\n    [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 41, 42, 43, 46], // SNOWY IMG\r\n    [45, 40, 44, 47, 27, 28, 29, 30], // RAINNING IMG\r\n    [31, 32, 33, 34, 36] // SUNNY IMG\r\n  ];\r\n\r\n  console.log(\"code\", condCode);\r\n\r\n  for (let i = 0; i <= arr.length - 1; i++) {\r\n    for (let j = 0; j <= arr[i].length - 1; j++) {\r\n      if (condCode === arr[i][j] + \"\") {\r\n        switch (i) {\r\n          case 0:\r\n            return tornado;\r\n          case 1:\r\n            return thounderstorm;\r\n          case 2:\r\n            return snowyday;\r\n          case 3:\r\n            return rainning;\r\n          case 4:\r\n            return clearsky;\r\n          default:\r\n            return \"\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const loadWeather = (city) => {\r\n  return async dispatch => {\r\n    try {\r\n      const  {...weatherObj} = await api.call('post','getweather', {city});\r\n        const newImg=imagePicker(weatherObj.condition.code)\r\n        dispatch(changeImg(newImg))\r\n        dispatch(changeWeather(weatherObj)) \r\n        dispatch(removeError())\r\n    } catch (err) {\r\n      const error  = err.message;\r\n      dispatch(addError(error.message));\r\n    }\r\n\r\n  }\r\n};","import React from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport {loadWeather} from '../redux/actions/getWeatherAction'\r\n\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nconst mapState=(state)=>({})\r\n\r\nconst actions={\r\n  loadWeather\r\n}\r\n\r\nclass PlaceInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n      isLoading: false,\r\n      selectedCity: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = address => {\r\n    this.setState({ address, isLoading: true, selectedCity: \"\" });\r\n  };\r\n\r\n  handleSelect = address => {\r\n    this.setState({ isLoading: false });\r\n    this.setState({ selectedCity: address });\r\n\r\n    console.log(\"client\",address.split(\",\")[0]);\r\n    this.props.loadWeather(address.split(',')[0]);\r\n  \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <PlacesAutocomplete\r\n          value={this.state.address}\r\n          onChange={this.handleChange}\r\n          onSelect={this.handleSelect}\r\n        >\r\n          {({ getInputProps, suggestions, getSuggestionItemProps }) => (\r\n            <React.Fragment>\r\n              <Input\r\n                {...getInputProps({\r\n                  placeholder: \"Where do you live? ...\",\r\n                  className: 'search_custom',\r\n                  loading: this.state.isLoading,\r\n                  fluid:true,\r\n                  transparent:true,\r\n                  size:'big'\r\n\r\n                })}\r\n                value={\r\n                  this.state.selectedCity\r\n                    ? this.state.selectedCity\r\n                    : this.state.address\r\n                }\r\n              />\r\n\r\n              <div className=\"autocomplete-dropdown-container\">\r\n                {suggestions.map(suggestion => {\r\n                  const className = suggestion.active\r\n                    ? \"suggestion-item--active\"\r\n                    : \"suggestion-item\";\r\n                  // inline style for demonstration purpose\r\n                  const style = suggestion.active\r\n                    ? { backgroundColor: 'rgba(19, 16, 16, 0.041)', cursor: 'pointer', fontSize:'2vw' }\r\n                    : { backgroundColor: '#1d1d2100', cursor: 'pointer',fontSize:'2vw',textShadow:' 1px 3px 1px #767676' };\r\n\r\n                  return (\r\n                    <div\r\n                      {...getSuggestionItemProps(suggestion, {\r\n                        className,\r\n                          style\r\n                      })}\r\n                    >\r\n                      <span>{suggestion.description}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </PlacesAutocomplete>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n} \r\n\r\nexport default connect(mapState,actions)(PlaceInput);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport cloudy from \"../../assets/cloudy.svg\";\r\nimport drop from \"../../assets/drop.svg\";\r\nimport sun from \"../../assets/sun.svg\";\r\nimport snowy from \"../../assets/snowflake.svg\";\r\nimport thunder from \"../../assets/storm.svg\";\r\nimport tornado from \"../../assets/tornado.svg\";\r\nimport forward from \"../../assets/forward.svg\";\r\nimport PlaceInput from \"../../components/PlaceInput\";\r\n\r\n// TODO: Credit the icon makers\r\n// https://www.flaticon.com/packs/weather-set-2\r\n// https://www.flaticon.com/packs/weather-53\r\n\r\nconst mapState = state => ({\r\n  imgCondition: state.newImg.data,\r\n  imgURL: state.getWeather.data\r\n});\r\nconst actions = {};\r\n\r\nclass ForecastApp extends Component {\r\n  render() {\r\n    let backImg;\r\n    let iconImg;\r\n    let TEMP;\r\n    let condTEXT;\r\n    if (this.props.imgCondition) {\r\n      backImg = `url(${this.props.imgCondition})`;\r\n      console.log(this.props.imgCondition);\r\n      if (this.props.imgCondition.includes(\"clearsky\")) {\r\n        iconImg = sun;\r\n      } else if (this.props.imgCondition.includes(\"snowy\")) {\r\n        iconImg = snowy;\r\n      } else if (this.props.imgCondition.includes(\"thounderstorm\")) {\r\n        iconImg = thunder;\r\n      } else if (this.props.imgCondition.includes(\"rainning\")) {\r\n        iconImg = drop;\r\n      } else if (this.props.imgCondition.includes(\"tornado\")) {\r\n        iconImg = tornado;\r\n      }\r\n    } else {\r\n      backImg =\r\n        'url(\"https://images.unsplash.com/photo-1428908728789-d2de25dbd4e2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\")';\r\n    }\r\n\r\n    if (this.props.imgURL) {\r\n      TEMP = this.props.imgURL.temp;\r\n      condTEXT = this.props.imgURL.condition.text;\r\n    }\r\n\r\n    console.log(\"render\", this.props.imgCondition);\r\n    return (\r\n      <div className=\"weather-container\">\r\n        <div\r\n          className=\"location\"\r\n          style={{\r\n            backgroundImage: backImg,\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\"\r\n          }}\r\n        >\r\n          <div className=\"temp_display\">\r\n            {!TEMP ? (\r\n              <div className=\"header_display\">\r\n                <div>Welcome to your personal Weather App </div>\r\n                <p>You can start by searching for a place </p>\r\n                <PlaceInput />\r\n              </div>\r\n            ) : (\r\n              <div className=\"input_custom\">\r\n                <PlaceInput />\r\n              </div>\r\n            )}\r\n\r\n            <br />\r\n            <div>{condTEXT}</div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <img src={iconImg} style={{ width: \"80px\" }} alt=\"\" />\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"temp_info\">{TEMP}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapState,\r\n  actions\r\n)(ForecastApp);\r\n","import React, { Component } from \"react\";\r\nimport \"./WeatherApp.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import Testme from \"../components/Testme\";\r\nimport ForecastApp from \"../forecaster/ForecastApp\";\r\n\r\nconst mapState = state => ({\r\n  imgCondition: state.newImg.data\r\n});\r\n\r\nclass WeatherApp extends Component {\r\n  render() {\r\n    let backImg;\r\n    if(this.props.imgCondition){\r\n      backImg=  `url(${this.props.imgCondition})`\r\n    }else{\r\n      backImg='url(\"https://images.unsplash.com/photo-1428908728789-d2de25dbd4e2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\")';\r\n    }\r\n    return (\r\n      <main>\r\n        <div\r\n          className=\"blurred-city\"\r\n          style={{\r\n            backgroundImage: backImg,\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\",\r\n            filter: \"blur(10px)\",\r\n          }}\r\n        >\r\n          </div>\r\n          <ForecastApp />\r\n      \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapState)(WeatherApp);\r\n","import React from 'react';\nimport WeatherApp from '../containers//weatherapp/WeatherApp'\nimport { Route, Switch, withRouter } from 'react-router-dom'\n\n\nconst App = () => {\n    return (\n      <Switch>\n        <Route exact path='/' component={WeatherApp} />\n      </Switch>\n    );\n  }\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store/configureStore\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./app/App.jsx\";\n\nReactDOM.render(\n  <Provider store={store}>\n   <Router>\n      <App />\n   </Router>\n  </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}