{"version":3,"sources":["redux/reducers/getWeatherReducer.js","redux/actions/weatherConstans.js","redux/reducers/rootReducer.js","redux/store/configureStore.js","redux/actions/errorActons.js","services/api.js","components/auto.jsx","redux/actions/getWeatherAction.js","components/Testme.jsx","containers/WeatherApp.jsx","app/App.jsx","index.js"],"names":["initialState","weatherReducer","state","arguments","length","undefined","action","type","Object","objectSpread","data","rootReducer","combineReducers","getWeather","getWeatherReducer","configureStore","createStore","compose","applyMiddleware","thunk","addError","error","api","call","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","method","path","response","wrap","_context","prev","next","console","log","axios","concat","sent","abrupt","stop","this","_x","_x2","_x3","apply","actions","loadWeather","city","dispatch","_ref2","weatherObj","esm_extends","t0","message","LocationSearchInput","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleChange","address","setState","isLoading","selectedCity","handleSelect","split","_this2","react_default","createElement","Fragment","dist_default","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","Input","assign","placeholder","loading","className","map","suggestion","active","style","backgroundColor","cursor","description","React","Component","connect","Testme","temp","WeatherApp","Container","textAlign","auto","components_Testme","withRouter","Switch","Route","exact","component","ReactDOM","render","react_redux_es","store","BrowserRouter","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.5865aa8d.chunk.js","sourcesContent":["import { GET_WEATHER } from \"../actions/weatherConstans\";\r\n\r\nlet initialState={}\r\n\r\n\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_WEATHER:\r\n        return {\r\n            ...state, \r\n            data: action.data\r\n        }\r\n      \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default weatherReducer;","export const ADD_ERROR = 'ADD_ERROR';\r\nexport const REMOVE_ERROR = 'ERROR_REMOVE';\r\n\r\nexport const GET_WEATHER = 'GET_WEATHER';","import { combineReducers } from \"redux\";\r\nimport getWeatherReducer from \"./getWeatherReducer\";\r\n\r\n \r\nconst rootReducer = combineReducers({\r\n  getWeather:getWeatherReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport thunk from 'redux-thunk'\r\n// import { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n\r\nconst DEFAULT_STATE = {}; \r\n\r\n const configureStore = createStore( rootReducer, DEFAULT_STATE,\r\n  compose( applyMiddleware(thunk) ),\r\n);\r\n\r\nexport default configureStore","import { ADD_ERROR, REMOVE_ERROR } from './weatherConstans';\r\n\r\nexport const addError = error => {\r\n    return {\r\n        type: ADD_ERROR,\r\n        error\r\n    }\r\n};\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: REMOVE_ERROR\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\n// const host = 'http://localhost:5000/api';\r\n\r\n\r\nexport const call = async (method, path, data) => {\r\n  console.log(\"api\", data)\r\n  // const response = await axios[method](`${host}/${path}`, data);\r\n  const response = await axios[method](`/api/${path}`, data);\r\n\r\n\r\n  return response.data;\r\n};\r\n\r\nexport default {call};","import React from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport {loadWeather} from '../redux/actions/getWeatherAction'\r\n\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nconst mapState=(state)=>({})\r\n\r\nconst actions={\r\n  loadWeather\r\n}\r\n\r\nclass LocationSearchInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n      isLoading: false,\r\n      selectedCity: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = address => {\r\n    this.setState({ address, isLoading: true, selectedCity: \"\" });\r\n  };\r\n\r\n  handleSelect = address => {\r\n    this.setState({ isLoading: false });\r\n    this.setState({ selectedCity: address });\r\n\r\n    console.log(\"client\",address.split(\",\")[0]);\r\n    this.props.loadWeather(address.split(',')[0]);\r\n  \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <PlacesAutocomplete\r\n          value={this.state.address}\r\n          onChange={this.handleChange}\r\n          onSelect={this.handleSelect}\r\n        >\r\n          {({ getInputProps, suggestions, getSuggestionItemProps }) => (\r\n            <div>\r\n              <Input\r\n                {...getInputProps({\r\n                  placeholder: \"Where do you live? ...\",\r\n                  // className: 'location-search-input',\r\n                  loading: this.state.isLoading\r\n                })}\r\n                value={\r\n                  this.state.selectedCity\r\n                    ? this.state.selectedCity\r\n                    : this.state.address\r\n                }\r\n              />\r\n\r\n              <div className=\"autocomplete-dropdown-container\">\r\n                {suggestions.map(suggestion => {\r\n                  const className = suggestion.active\r\n                    ? \"suggestion-item--active\"\r\n                    : \"suggestion-item\";\r\n                  // inline style for demonstration purpose\r\n                  const style = suggestion.active\r\n                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n\r\n                  return (\r\n                    <div\r\n                      {...getSuggestionItemProps(suggestion, {\r\n                        className,\r\n                          style\r\n                      })}\r\n                    >\r\n                      <span>{suggestion.description}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </PlacesAutocomplete>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n} \r\n\r\nexport default connect(mapState,actions)(LocationSearchInput);\r\n","import { GET_WEATHER } from \"./weatherConstans\"; \r\nimport { addError, removeError } from \"./errorActons\";\r\nimport api from \"../../services/api\";\r\n\r\n\r\nexport const changeWeather =(newWeather)=>({ \r\n  type: GET_WEATHER,\r\n  data: newWeather\r\n});\r\n\r\n\r\n\r\nexport const loadWeather = (city) => {\r\n  console.log(\"action\", city)\r\n\r\n  return async dispatch => {\r\n    try {\r\n      const  {...weatherObj} = await api.call('post','getweather', {city});\r\n\r\n        dispatch(changeWeather(weatherObj)) \r\n        dispatch(removeError())\r\n    } catch (err) {\r\n      const error  = err.message;\r\n      dispatch(addError(error.message));\r\n    }\r\n\r\n  }\r\n};","import React from \"react\";\r\n// import { Input } from \"semantic-ui-react\";\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapState=(state)=>({\r\n  data:state.getWeather.data\r\n})\r\n\r\nclass Testme extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.data ? <h1>{this.props.data.temp}</h1> : <h1>nothing</h1>}  \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapState)(Testme);\r\n","import React, { Component } from \"react\";\r\nimport {Container} from 'semantic-ui-react'\r\n\r\nimport PlacesAutocomplete from \"../components/auto\";\r\nimport Testme from \"../components/Testme\";\r\n\r\n\r\nclass WeatherApp extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Container textAlign={'center'}>\r\n\r\n        <PlacesAutocomplete />\r\n        <Testme />\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherApp;\r\n","import React from 'react';\nimport WeatherApp from '../containers/WeatherApp'\nimport { Route, Switch, withRouter } from 'react-router-dom'\n\n\nconst App = () => {\n    return (\n      <Switch>\n        <Route exact path='/' component={WeatherApp} />\n      </Switch>\n    );\n  }\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store/configureStore\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./app/App.jsx\";\n\nReactDOM.render(\n  <Provider store={store}>\n   <Router>\n      <App />\n   </Router>\n  </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}